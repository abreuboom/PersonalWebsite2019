{"version":3,"sources":["serviceWorker.js","components/bio.jsx","components/about.jsx","projectDirectory.js","components/menu.jsx","components/previewCard.jsx","components/projects.jsx","components/social.jsx","components/title.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Bio","Component","className","Project","name","description","thumbnail","link","css","this","projects","backgroundImage","color","backgroundColor","MenuItem","handleClick","props","onClick","index","Fragment","href","isActive","React","PreviewCard","state","expanded","console","log","style","target","class","src","alt","Projects","map","project","library","add","fab","Title","activeIndex","titleClass","mode","activeMode","navigator","serviceWorker","ready","then","registration","unregister","root","document","getElementById","Home","select","bind","setState","ReactDOM","render"],"mappings":"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","file":"static/js/main.34f0d957.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\n\nclass Bio extends Component {\n  render() {\n    return (\n      <div className=\"bio-section\">\n        <p>\n          I’m a <span className=\"clickable-text\">Software Engineer</span> that’s\n          passionate about{\" \"}\n          <span className=\"clickable-text\">Portrait Photography</span> and{\" \"}\n          <span className=\"clickable-text\">Product Design</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <p className=\"about-description\">\n          I was most recently an iOS Engineering Intern at <b>Instagram</b> but\n          I’ve previously worked at <b>Facebook</b>, All Star Code, REZI, and\n          CottageClass.\n          <br />\n          School: Boston College 2020\n          <br />\n          Favorite Color: Cerulean\n          <br />\n          Xbox Gamer Tag circa 2010: jasonboy24\n          <br />\n          Outside of programming, I am passionate about creating things that\n          inspire others to create! My creative outlets of choice are portrait\n          photography and graphic design\n          <br />\n          I’ve been programming in some capacity since 2012 through CS class at\n          my high school but I really got my start in the tech industry through\n          a program called All Star Code in 2015\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","function Project(name, description, thumbnail, link, css) {\n  this.name = name;\n  this.description = description;\n  this.thumbnail = thumbnail;\n  this.link = link;\n  this.css = css;\n}\n\nvar projects = [\n  new Project(\n    \"SignAR\",\n    \"An augmented-reality sign language translator for iOS\",\n    \"/assets/signar@2x.png\",\n    \"https://github.com/abreuboom/signar\", {\n      backgroundImage: \"linear-gradient(45deg, #36AAFF, #066AB3)\",\n      color: \"white\"\n    }\n  ),\n\n  new Project(\n    \"Instagram\",\n    \"Software Engineering Intern on the IGTV team\",\n    \"/assets/igtv@2x.png\",\n    \"\", {\n      // backgroundColor: \"#DA5274\"\n      backgroundColor: \"white\",\n    }\n  ),\n\n  new Project(\n    \"Facebook\",\n    \"Software Engineering Intern at Facebook working on News Feed\",\n    \"/assets/fb@2x.png\",\n    \"\", {\n      // backgroundColor: \"#DA5274\"\n      backgroundColor: \"#1778F2\",\n      color: \"white\"\n    }\n  ),\n\n  // new Project(\n  //   \"bARky\",\n  //   \"Your personal pet finding assistant. Classify dog breeds and find more like it to adopt near you\",\n  //   \"/assets/barky.png\",\n  //   \"https://github.com/abreuboom/barky\",\n\n  // ),\n\n  // new Project(\n  //   \"2019 Dance Concept Video\",\n  //   \"Directed & produced for UPrising Dance Crew\",\n  //   \"/assets/girlfriend.png\",\n  //   \"https://youtu.be/wd7AX1eC3-o\"\n  // )\n];\n\nexport function GetProjects() {\n  return projects;\n}","import React, { Component } from \"react\";\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.select = this.select.bind(this);\n    this.state = {\n      activeIndex: 0\n    };\n  }\n\n  select(index) {\n    this.setState({ activeIndex: index });\n    this.props.setMode(index);\n  }\n\n  resetMenu = () => this.select({ activeIndex: 0 });\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <h1 className=\"menu-title\" onClick={this.resetMenu}>\n          Menu\n        </h1>\n        <ul className=\"menu-options\">\n          <MenuItem\n            name=\"About\"\n            index={1}\n            isActive={this.state.activeIndex === 1}\n            onClick={this.select}\n          />\n          <MenuItem\n            name=\"Projects\"\n            index={2}\n            isActive={this.state.activeIndex === 2}\n            onClick={this.select}\n          />\n          <MenuItem\n            name=\"Resume\"\n            index={3}\n            isActive={false}\n            onClick={\"window.location.href = 'https://w3docs.com';\"}\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n\nclass MenuItem extends React.Component {\n  handleClick = () => this.props.onClick(this.props.index);\n  render() {\n    return (\n      <React.Fragment>\n        <li>\n          <a\n            href={this.props.link}\n            onClick={this.handleClick}\n            className={this.props.isActive ? \"active\" : \"inactive\"}\n          >\n            <span>{this.props.name}</span>\n          </a>\n        </li>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\n\nclass PreviewCard extends Component {\n  state = {\n    expanded: false\n  };\n\n  handleClick = () => {\n    console.log(\"yerr \" + this.props.name);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"preview-card\"\n        onClick={this.handleClick}\n        style={this.props.css}\n      >\n        <a href={this.props.link} target=\"_blank\">\n          <div class=\"text\">\n            <h3>{this.props.name}</h3>\n            <p>{this.props.description}</p>\n          </div>\n\n          <img src={this.props.thumbnail} alt={this.props.name} />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default PreviewCard;\n","import React, { Component } from \"react\";\n\nimport PreviewCard from \"./previewCard\";\n\nclass Projects extends Component {\n  render() {\n    console.log(this.props.projects);\n    return (\n      <div className=\"project-section\">\n        <p>Recent Projects</p>\n        <br />\n        <div className=\"projects\">\n          {this.props.projects.map(project => {\n            return <PreviewCard {...project} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nlibrary.add(fab);\n\nclass Social extends Component {\n  render() {\n    return (\n      <div className=\"social-buttons\">\n        <a href=\"https://github.com/abreuboom\" target=\"_blank\">\n          <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n        </a>\n        <a href=\"https://www.linkedin.com/in/abbbbreu\" target=\"_blank\">\n          <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} />\n        </a>\n        <a href=\"https://www.facebook.com/abbbbreu\" target=\"_blank\">\n          <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\n        </a>\n        <a href=\"https://www.instagram.com/abbbbreu/\" target=\"_blank\">\n          <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n        </a>\n        <a href=\"https://twitter.com/abbbbreu\" target=\"_blank\">\n          <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n        </a>\n        <a\n          href=\"https://www.youtube.com/channel/UC4qy_YpIt5v6Pk907EEf6EQ\"\n          target=\"_blank\"\n        >\n          <FontAwesomeIcon icon={[\"fab\", \"youtube\"]} />\n        </a>\n        <a href=\"https://www.flickr.com/people/abbbbreu/\" target=\"_blank\">\n          <FontAwesomeIcon icon={[\"fab\", \"flickr\"]} />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Social;\n","import React, { Component } from \"react\";\n\nclass Title extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0\n    };\n  }\n\n  render() {\n    var titleClass = (function(mode) {\n      switch (mode) {\n        case 0:\n          return \"enlarged\";\n        default:\n          return \"minimized\";\n      }\n    })(this.state.activeMode);\n\n    return (\n      <div className={titleClass}>\n        <p className=\"secondary-text\">Hi, my name is</p>\n        <br />\n        <h1 className=\"underline-title\">{this.props.name}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import \"./css/styles.css\";\nimport \"circular-std\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport React, {\n  Component\n} from \"react\";\n\nimport About from \"./components/about\";\nimport Bio from \"./components/bio\";\nimport {\n  GetProjects\n} from \"./projectDirectory.js\";\nimport Menu from \"./components/menu\";\nimport Projects from \"./components/projects\";\nimport ReactDOM from \"react-dom\";\nimport Social from \"./components/social\";\nimport Title from \"./components/title\";\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst root = document.getElementById(\"root\");\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.select = this.select.bind(this);\n    this.state = {\n      activeMode: 0\n    };\n  }\n\n  select(mode) {\n    this.setState({\n      activeMode: mode\n    });\n  }\n\n  render() {\n    var content = (function (mode) {\n      // switch (mode) {\n      //   case 0:\n      //     return <Projects projects={GetProjects()} />;\n      //   case 1:\n      //     return <About />;\n      //   case 2:\n      //     return <Projects projects={GetProjects()} />;\n      //   default:\n      //     return <div />;\n      // }\n    })(this.state.activeMode);\n\n    return ( <\n      React.Fragment > {\n        /* <Menu setMode={this.select} /> */ } {\n        /* <Social /> */ } <\n      div className = \"title-section\" >\n      <\n      Title name = \"John Abreu.\" / >\n      <\n      Bio / >\n      <\n      /div> {\n        /* {content} */ } <\n      Projects projects = {\n        GetProjects()\n      }\n      /> <\n      /React.Fragment>\n    );\n  }\n}\n\nReactDOM.render( < Home / > , root);"],"sourceRoot":""}